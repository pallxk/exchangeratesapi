/**
 * Foreign exchange rates API with currency conversion
 * Exchange rates API is a free service for current and historical foreign exchange rates published by the European Central Bank
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Currency from '../model/Currency';
import DailyRates from '../model/DailyRates';
import Error from '../model/Error';
import HistoryRates from '../model/HistoryRates';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the historical operation.
     * @callback module:api/DefaultApi~historicalCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DailyRates} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get historical rates for any day since 1999.
     * @param {Date} _date Date in format YYYY-MM-DD
     * @param {Object} opts Optional parameters
     * @param {module:model/Currency} opts.base Rates are quoted against the Euro by default. Quote against a different currency by setting the base parameter in your request.
     * @param {String} opts.symbols Request specific exchange rates by setting the symbols parameter.
     * @param {module:api/DefaultApi~historicalCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DailyRates}
     */
    historical(_date, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter '_date' is set
      if (_date === undefined || _date === null) {
        throw new Error("Missing the required parameter '_date' when calling historical");
      }

      let pathParams = {
        'date': _date
      };
      let queryParams = {
        'base': opts['base'],
        'symbols': opts['symbols']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DailyRates;
      return this.apiClient.callApi(
        '/{date}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the history operation.
     * @callback module:api/DefaultApi~historyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HistoryRates} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get historical rates for a time period.
     * @param {Date} startAt 
     * @param {Date} endAt 
     * @param {Object} opts Optional parameters
     * @param {module:model/Currency} opts.base Rates are quoted against the Euro by default. Quote against a different currency by setting the base parameter in your request.
     * @param {String} opts.symbols Request specific exchange rates by setting the symbols parameter.
     * @param {module:api/DefaultApi~historyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HistoryRates}
     */
    history(startAt, endAt, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'startAt' is set
      if (startAt === undefined || startAt === null) {
        throw new Error("Missing the required parameter 'startAt' when calling history");
      }
      // verify the required parameter 'endAt' is set
      if (endAt === undefined || endAt === null) {
        throw new Error("Missing the required parameter 'endAt' when calling history");
      }

      let pathParams = {
      };
      let queryParams = {
        'start_at': startAt,
        'end_at': endAt,
        'base': opts['base'],
        'symbols': opts['symbols']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = HistoryRates;
      return this.apiClient.callApi(
        '/history', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the latest operation.
     * @callback module:api/DefaultApi~latestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DailyRates} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the latest foreign exchange reference rates.
     * @param {Object} opts Optional parameters
     * @param {module:model/Currency} opts.base Rates are quoted against the Euro by default. Quote against a different currency by setting the base parameter in your request.
     * @param {String} opts.symbols Request specific exchange rates by setting the symbols parameter.
     * @param {module:api/DefaultApi~latestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DailyRates}
     */
    latest(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'base': opts['base'],
        'symbols': opts['symbols']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DailyRates;
      return this.apiClient.callApi(
        '/latest', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
